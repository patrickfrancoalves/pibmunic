/*------------------------------------------------------------------*/
/*--     DADOS DO SCR : BUSCANDO NÍVEIS DE RISCO DO MERCADO       --*/
/*------------------------------------------------------------------*/


PROC SQL;
CONNECT TO NETEZZA AS con1(DATABASE=PRD_DWM SERVER=NTZP110 authdomain=NTZP110Auth SQL_FUNCTIONS=ALL);
CREATE TABLE SCR AS 
   SELECT NR_CPF_CNPJ_RAIZ , 
          DT_MVM_DWM, 
          SUM(VALORVENCIDO_ACM_181_DIA) AS VALORVENCIDO_ACM_181_DIA,
          SUM(VALORVENCIDO_151_180_DIA) AS VALORVENCIDO_151_180_DIA,
          SUM(VALORVENCIDO_121_150_DIA) AS VALORVENCIDO_121_150_DIA,
          SUM(VALORVENCIDO_91_120_DIA ) AS VALORVENCIDO_91_120_DIA,
          SUM(VALORVENCIDO_61_90_DIA  ) AS VALORVENCIDO_61_90_DIA,
          SUM(VALORVENCIDO_31_60_DIA  ) AS VALORVENCIDO_31_60_DIA,
          SUM(VALORVENCIDO_15_30_DIA  ) AS VALORVENCIDO_15_30_DIA,
          CASE WHEN SUM(VALORVENCIDO_ACM_181_DIA)>100  THEN 9
               WHEN SUM(VALORVENCIDO_151_180_DIA)>100  THEN 8
               WHEN SUM(VALORVENCIDO_121_150_DIA)>100  THEN 7
               WHEN SUM(VALORVENCIDO_91_120_DIA )>100  THEN 6
               WHEN SUM(VALORVENCIDO_61_90_DIA  )>100  THEN 5
               WHEN SUM(VALORVENCIDO_31_60_DIA  )>100  THEN 4
               WHEN SUM(VALORVENCIDO_15_30_DIA  )>100  THEN 3
               ELSE 2 END AS RISCO, 
          AVG(VALORVENCIDOTOTAL) AS VENC_TOT

   FROM CONNECTION TO con1 
      (SELECT DISTINCT NUMCCPFCNPJ AS NR_CPF_CNPJ_RAIZ,
                       IDCONSULTA,
                       DATAHORACONSULTA,
                       DATAMOVIMENTODWM AS DT_MVM_DWM,
                       VALORVENCIDO_15_30_DIA,
                       VALORVENCIDO_31_60_DIA,
                       VALORVENCIDO_61_90_DIA,
                       VALORVENCIDO_91_120_DIA,
                       VALORVENCIDO_121_150_DIA,
                       VALORVENCIDO_151_180_DIA,
                       VALORVENCIDO_181_240_DIA+VALORVENCIDO_241_300_DIA+
                       VALORVENCIDO_301_360_DIA+VALORVENCIDO_361_540_DIA+
                       VALORVENCIDOACIMA_540_DIA+VALORPREJUIZOTOTAL AS VALORVENCIDO_ACM_181_DIA,
                       VALORVENCIDOTOTAL,
                       CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN NUMCCPFCNPJ
                            WHEN LENGTH(NUMCCPFCNPJ)=14 THEN SUBSTRING(NUMCCPFCNPJ,1,8)
                            ELSE NUMCCPFCNPJ END AS CPF_CNPJ,
                       CASE WHEN LENGTH(NUMCCPFCNPJ)=14 
                            THEN MAX(IDCONSULTA) OVER(PARTITION BY SUBSTRING(NUMCCPFCNPJ,1,8), DATAMOVIMENTODWM) 
                            ELSE MAX(IDCONSULTA) OVER(PARTITION BY NUMCCPFCNPJ, DATAMOVIMENTODWM) END AS ID_MAX 

        FROM BACEN_CONSULTA_EVENTUAL
          WHERE DATAMOVIMENTODWM BETWEEN '2017-04-01' AND '2018-03-01' )
     WHERE IDCONSULTA=ID_MAX 
     GROUP BY NR_CPF_CNPJ_RAIZ , DT_MVM_DWM 
     ORDER BY NR_CPF_CNPJ_RAIZ , DT_MVM_DWM ;
QUIT;



PROC SORT DATA=SCR out=SCR2 nodupkey;BY NR_CPF_CNPJ_RAIZ;
RUN;

/*PARTE DA RENDA*/
PROC SQL;
CONNECT TO NETEZZA AS con1(DATABASE=PRD_DWM SERVER=NTZP110 authdomain=NTZP110Auth SQL_FUNCTIONS=ALL);
CREATE TABLE RENDA AS 
   SELECT NR_CPF_CNPJ_RAIZ,DT_MVM_DWM,
          SUM(VR_RND) AS VR_RND
   FROM CONNECTION TO con1 
      ( SELECT DISTINCT 
               CASE WHEN LENGTH(NR_CPF_CNPJ)=11 THEN NR_CPF_CNPJ
                    WHEN LENGTH(NR_CPF_CNPJ)=14 THEN SUBSTRING(NR_CPF_CNPJ,1,8)
			        ELSE NR_CPF_CNPJ END AS NR_CPF_CNPJ_RAIZ ,
	                     DT_MVM_DWM,
	                     DS_MDL_RND,
						 VR_RND,
						 MAX(DT_MVM_DWM) OVER(PARTITION BY SUBSTRING(NR_CPF_CNPJ,1,8)) AS DATA_MAX
        FROM RENDA_PESSOA
		WHERE DT_MVM_DWM BETWEEN '2017-04-01' AND '2018-03-01'
		
        ) 
GROUP BY NR_CPF_CNPJ_RAIZ,DT_MVM_DWM
ORDER BY NR_CPF_CNPJ_RAIZ,DT_MVM_DWM;
QUIT;


/*------------------------------------------------------------------*/
/*-- Tabela de Sócio Principal se chama PLD.RECAL_RISCO_SCR, onde --*/
/*-- o identificador do sócio Principal é CAMPO NR_CPF_SOCIO      --*
/*-- Exemplo de Grupo Econômico: CD_GRP_ECN=43670                 --*/
/*------------------------------------------------------------------*/

/*PARTE DO GRUPO ECONOMICO*/
/*PROC SQL;
CONNECT TO NETEZZA AS con1(DATABASE=PRD_DWM SERVER=NTZP110 authdomain=NTZP110Auth SQL_FUNCTIONS=ALL);
CREATE TABLE GRUPOS AS 
   SELECT NR_CPF_CNPJ_RAIZ,DT_MVM_DWM,CD_GRP_ECN,
          SG_TPO_PSS,DESCTIPOFORMACONSTITUICAO,
		  AVG(IDADE) AS IDADE

   FROM CONNECTION TO con1 
      ( SELECT DISTINCT
               CASE WHEN LENGTH(NR_CPF_CNPJ)=11 THEN NR_CPF_CNPJ
                    WHEN LENGTH(NR_CPF_CNPJ)=14 THEN SUBSTRING(NR_CPF_CNPJ,1,8)
			        ELSE NR_CPF_CNPJ END AS NR_CPF_CNPJ_RAIZ ,
	                     DT_MVM_DWM,
						 months_BETWEEN(DT_MVM_DWM,DT_NSC) AS IDADE,
	                     CD_GRP_ECN,
						 SG_TPO_PSS,
						 DESCTIPOFORMACONSTITUICAO,
						 MAX(DT_MVM_DWM) OVER(PARTITION BY SUBSTRING(NR_CPF_CNPJ,1,8)) AS DATA_MAX
        FROM CLIENTE
		WHERE DT_MVM_DWM BETWEEN '2017-04-01' AND '2018-03-01' AND CD_GRP_ECN NOT IN (-1,-2) 
        ) 
WHERE DT_MVM_DWM=DATA_MAX AND 
      NR_CPF_CNPJ_RAIZ NOT IN (SELECT NR_CPF_CNPJ_RAIZ FROM PLD.RECAL_VAR_CADASTRAIS_SEGMENTOS GROUP BY NR_CPF_CNPJ_RAIZ)
	  NR_CPF_CNPJ_RAIZ NOT IN (SELECT NR_CPF_CNPJ_RAIZ FROM PLD.RECAL_VAR_CADASTRAIS_SEGMENTOS GROUP BY NR_CPF_CNPJ_RAIZ)

GROUP BY NR_CPF_CNPJ_RAIZ,DT_MVM_DWM,CD_GRP_ECN,SG_TPO_PSS,DESCTIPOFORMACONSTITUICAO
ORDER BY CD_GRP_ECN,NR_CPF_CNPJ_RAIZ;
QUIT;*/



PROC SQL;
CONNECT TO NETEZZA AS con1(DATABASE=PRD_DWM SERVER=NTZP110 authdomain=NTZP110Auth SQL_FUNCTIONS=ALL);
CREATE TABLE GRUPOS AS 
   SELECT * 
   FROM CONNECTION TO con1 
      ( SELECT DISTINCT
               CASE WHEN LENGTH(NR_CPF_CNPJ)=11 THEN NR_CPF_CNPJ
                    WHEN LENGTH(NR_CPF_CNPJ)=14 THEN SUBSTRING(NR_CPF_CNPJ,1,8)
			        ELSE NR_CPF_CNPJ END AS NR_CPF_CNPJ_RAIZ ,
	                     DT_MVM_DWM,
	                     CD_GRP_ECN,
						 SG_TPO_PSS
        FROM CLIENTE
		WHERE DT_MVM_DWM BETWEEN '2017-04-01' AND '2018-03-01' AND CD_GRP_ECN NOT IN (-1,-2) 
        ) 
ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM;
QUIT;




/*PASSO 1:BUSCAR SÓCIO PRINCIPAL*/
PROC SQL;
CREATE TABLE CALIBRA_GRUPOS AS
SELECT DISTINCT 
       A.NR_CPF_CNPJ_RAIZ , 
       B.NR_CPF_SOCIO,
	   A.CD_GRP_ECN,
	   A.DT_MVM_DWM
FROM GRUPOS AS A
INNER JOIN PLD.RECAL_RISCO_SCR AS B ON A.NR_CPF_CNPJ_RAIZ=B.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM=B.DT_CLASSIFICACAO 
WHERE NR_CPF_SOCIO<>'';

CREATE TABLE CALIBRA_GRUPOS2 AS
SELECT DISTINCT  A.*,B.NR_CPF_CNPJ_RAIZ AS CNPJ_GRUPO
FROM CALIBRA_GRUPOS AS A
LEFT JOIN GRUPOS  AS B ON A.CD_GRP_ECN=B.CD_GRP_ECN AND A.DT_MVM_DWM=B.DT_MVM_DWM ;
QUIT;


/*PASSO 2: EXCLUIR PJ E MAJORIRATIO (SÓCIO PRINCIPAL)*/
DATA CALIBRA_GRUPOS3;
SET CALIBRA_GRUPOS2;
IF NR_CPF_CNPJ_RAIZ=CNPJ_GRUPO OR NR_CPF_SOCIO=CNPJ_GRUPO THEN DELETE;
RUN;


/*PASSO 3: RETORNAR RISCO E RENDA*/
PROC SQL;
CREATE TABLE CALIBRA_GRUPOS4 AS
SELECT DISTINCT A.*,B.RISCO,C.VR_RND,1 AS PARA_RENDA
FROM CALIBRA_GRUPOS3 AS A
LEFT JOIN SCR   AS B ON A.CNPJ_GRUPO=B.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM=B.DT_MVM_DWM 
LEFT JOIN RENDA AS C ON A.CNPJ_GRUPO=C.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM=C.DT_MVM_DWM ;
QUIT;



PROC MEANS DATA=CALIBRA_GRUPOS4 NOPRINT NWAY;
CLASS NR_CPF_CNPJ_RAIZ DT_MVM_DWM;
VAR RISCO;
OUTPUT OUT=CALIBRA_GRUPOS5(RENAME=_FREQ_=SIZE_GRUPO DROP=_TYPE_) 
MEAN(RISCO)=RISCO SUM(PARA_RENDA)=RENDA_GRUPO ;
WEIGHT VR_RND;
RUN;


/*SALVANDO OS DADOS*/
DATA PLD.RECAL_RISCOS_GRUPOS_PJ;
SET CALIBRA_GRUPOS5;
RISCO_GRUPO = CEIL(RISCO);
IF RISCO_GRUPO NE .;
     IF RISCO_GRUPO=2 THEN RISCO_GRUPO_CAT='A';
ELSE IF RISCO_GRUPO=3 THEN RISCO_GRUPO_CAT='B';
ELSE IF RISCO_GRUPO=4 THEN RISCO_GRUPO_CAT='C';
ELSE IF RISCO_GRUPO=5 THEN RISCO_GRUPO_CAT='D';
ELSE IF RISCO_GRUPO=6 THEN RISCO_GRUPO_CAT='E';
ELSE IF RISCO_GRUPO=7 THEN RISCO_GRUPO_CAT='F';
ELSE IF RISCO_GRUPO=8 THEN RISCO_GRUPO_CAT='G';
ELSE IF RISCO_GRUPO=9 THEN RISCO_GRUPO_CAT='H';
RUN;


PROC FREQ DATA=PLD.RECAL_RISCOS_GRUPOS_PJ;
TABLE RISCO_GRUPO_CAT;
RUN;


LIBNAME PRDDWM NETEZZA DATABASE=PRD_DWM SERVER=ntzp110 SCHEMA=USRGEARQ  
        USER=PRD_SAS_DWM_PLD 
        PASSWORD="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA";


LIBNAME DW NETEZZA uid=PRD_SAS_DWM_PLD
                   pwd="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA"
                   server=ntzp110
                   database=PRD_DWM
                   PRESERVE_TAB_NAMES=YES
                   CONNECTION = GLOBAL
                   sqlgeneration=DBMS
                   BULKUNLOAD = YES
                   AUTOCOMMIT = YES  ;



/*------------------------------------------------*/
/**         Connect to Viya Environment          **/
/*------------------------------------------------*/

libname dbtemp netezza server=ntzp110 
user=PRD_SAS_DWM_PLD 
password="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA" 
database=sandbox connection=global ;

data dbtemp.teste;set sashelp.CARS;run;
proc append base = dbtemp.teste
data = sashelp.CARS;
run;

proc sql;
connect to netezza (server=ntzp110 
                    database=sandbox 
                    user=PRD_SAS_DWM_PLD 
                    password="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA" 
                    connection=global);
   execute(
            create  volatile  temporary table dbtemp.test as (
            select * from anotacao where NR_CPF_CNPJ='47044896634'
			) 
    ) by netezza;
quit;



libname pwdb netezza user=PRD_SAS_DWM_PLD 
                     pwd="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA"
                     server=ntzp110 
                     connection=global
					 database=sandbox;

proc sql;
  connect to netezza (user=PRD_SAS_DWM_PLD 
                      pwd="{SAS002}654D6B4D1786A8FF4F1B71C510A00B5E16EB521250990C6E487D8A1E5614C2F749F2D0DA"
                      server=ntzp110 connection=global autocommit=yes

                      BULKUNLOAD=YES);
  execute (create temporary table test(brand_id varchar(1), brand_desc varchar(35),
  update_date date)) by netezza;
  /*insert into testtmp select * from pwdb.brand;*/
quit;

