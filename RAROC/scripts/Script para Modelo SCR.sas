/*--------------------------------------------------------------------------*/
/* DEFININDO UMA FUNÇÃO DE MÁXIMO PARA USAR DENTRO DO SQL                   */
/* https://www.rawsas.com/finding-min-or-max-of-character-variables-in-sql/ */
/*                                                                          */
/*--------------------------------------------------------------------------*/

proc fcmp outlib=work.myfuncs.test;
function maxC(a0  , a1  , a2  , a3 , a4 , a5 , a6 , a7 , a8 , a9  , a10, 
              a11 , a12 , a13 , a14, a15, a16, a17, a18, a19, a20 , a21, 
              a22 , a23 , a24 , a25, a26, a27, a28, a29, a30, a31 , a32, 
              a33 , a34 , a35 , a36, a37, a38, a39, a40, a41, a42 , a43, 
              a44 , a45 , a46 , a47 ) ;
length result 8;
    result= a0  <> a1  <> a2  <> a3  <> a4  <> a5  <> a6  <> a7  <> a8  <> a9  <> a10 <> 
            a11 <> a12 <> a13 <> a14 <> a15 <> a16 <> a17 <> a18 <> a19 <> a20 <> a21 <> 
            a22 <> a23 <> a24 <> a25 <> a26 <> a27 <> a28 <> a29 <> a30 <> a31 <> a32 <> 
            a33 <> a34 <> a35 <> a36 <> a37 <> a38 <> a39 <> a40 <> a41 <> a42 <> a43 <> 
            a44 <> a45 <> a46 <> a47 ;
    return (result);
  endsub;
quit;
options cmplib=work.myfuncs;



PROC SQL;
CONNECT TO NETEZZA AS CON1(DATABASE=PRD_DWM SERVER=NTZP110 AUTHDOMAIN=NTZP110AUTH SQL_FUNCTIONS=ALL);
CREATE TABLE SAFRA_BACEN(DROP=RISCO_BC:) AS 
   SELECT DISTINCT NR_CPF_CNPJ_RAIZ,DT_MVM_DWM,CONTAGEM,TIPO,
          maxC( RISCO_BC   ,RISCO_BC1  ,RISCO_BC2  ,RISCO_BC3  ,RISCO_BC4  ,RISCO_BC5  ,
                RISCO_BC6  ,RISCO_BC7  ,RISCO_BC8  ,RISCO_BC9  ,RISCO_BC10 ,RISCO_BC11 ,
                RISCO_BC12 ,RISCO_BC13 ,RISCO_BC14 ,RISCO_BC15 ,RISCO_BC16 ,RISCO_BC17 ,
                RISCO_BC18 ,RISCO_BC19 ,RISCO_BC20 ,RISCO_BC21 ,RISCO_BC22 ,RISCO_BC23 ,
                RISCO_BC24 ,RISCO_BC25 ,RISCO_BC26 ,RISCO_BC27 ,RISCO_BC28 ,RISCO_BC29 ,
                RISCO_BC30 ,RISCO_BC31 ,RISCO_BC32 ,RISCO_BC33 ,RISCO_BC34 ,RISCO_BC35 ,
                RISCO_BC36 ,RISCO_BC37 ,RISCO_BC38 ,RISCO_BC39 ,RISCO_BC40 ,RISCO_BC41 ,
                RISCO_BC42 ,RISCO_BC43 ,RISCO_BC44 ,RISCO_BC45 ,RISCO_BC46 ,RISCO_BC47) as RISCOMAX ,
   CASE WHEN CONTAGEM<=6  THEN 1
        WHEN CONTAGEM<=12 THEN 2
		WHEN CONTAGEM<=24 THEN 3
		WHEN CONTAGEM<=36 THEN 4
		WHEN CONTAGEM<=48 THEN 5
		ELSE -1 END AS CLASSE_CONSULTA 

   FROM CONNECTION TO CON1 
      ( SELECT * , 
		     LAG(RISCO_BC,1,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC1  ,
             LAG(RISCO_BC,2,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC2  ,
		     LAG(RISCO_BC,3,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC3  ,
		     LAG(RISCO_BC,4,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC4  ,
		     LAG(RISCO_BC,5,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC5  ,
		     LAG(RISCO_BC,6,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC6  ,
		     LAG(RISCO_BC,7,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC7  ,
		     LAG(RISCO_BC,8,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC8  ,
		     LAG(RISCO_BC,9,0)  OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC9  ,
		     LAG(RISCO_BC,10,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC10 ,
		     LAG(RISCO_BC,11,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC11 ,
		     LAG(RISCO_BC,12,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC12 ,
			 LAG(RISCO_BC,13,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC13 ,
			 LAG(RISCO_BC,14,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC14 ,
			 LAG(RISCO_BC,15,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC15 ,
			 LAG(RISCO_BC,16,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC16 ,
			 LAG(RISCO_BC,17,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC17 ,
			 LAG(RISCO_BC,18,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC18 ,
			 LAG(RISCO_BC,19,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC19 ,
			 LAG(RISCO_BC,20,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC20 ,
			 LAG(RISCO_BC,21,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC21 ,
			 LAG(RISCO_BC,22,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC22 ,
			 LAG(RISCO_BC,23,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC23 ,
			 LAG(RISCO_BC,24,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC24 ,
			 LAG(RISCO_BC,25,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC25 ,
			 LAG(RISCO_BC,26,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC26 ,
			 LAG(RISCO_BC,27,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC27 ,
			 LAG(RISCO_BC,28,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC28 ,
			 LAG(RISCO_BC,29,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC29 ,
			 LAG(RISCO_BC,30,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC30 ,
			 LAG(RISCO_BC,31,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC31 ,
			 LAG(RISCO_BC,32,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC32 ,
			 LAG(RISCO_BC,33,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC33 ,
			 LAG(RISCO_BC,34,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC34 ,
			 LAG(RISCO_BC,35,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC35 ,
			 LAG(RISCO_BC,36,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC36 ,
			 LAG(RISCO_BC,37,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC37 ,
			 LAG(RISCO_BC,38,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC38 ,
			 LAG(RISCO_BC,39,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC39 ,
			 LAG(RISCO_BC,40,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC40 ,
			 LAG(RISCO_BC,41,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC41 ,
			 LAG(RISCO_BC,42,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC42 ,
			 LAG(RISCO_BC,43,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC43 ,
			 LAG(RISCO_BC,44,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC44 ,
			 LAG(RISCO_BC,45,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC45 ,
			 LAG(RISCO_BC,46,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC46 ,
			 LAG(RISCO_BC,47,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS RISCO_BC47 

       FROM 
             ( SELECT NR_CPF_CNPJ_RAIZ,
                      DT_MVM_DWM,
					  ADD_MONTHS(DT_MVM_DWM ,1) AS DT_MVM_DWM2,
					  ADD_MONTHS(DT_MVM_DWM ,2) AS DT_MVM_DWM3,
		              COUNT(NR_CPF_CNPJ_RAIZ) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ) AS CONTAGEM ,
                      MAX(RISCO_BC) AS RISCO_BC,
					  MAX(TOMADOR) AS TOMADOR,
			          MAX(DT_MVM_MAX) AS DT_MVM_MAX,
					  MAX(TIPO) AS TIPO
 
               FROM 
			 (  SELECT DISTINCT IDCONSULTA,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=14 THEN SUBSTRING(NUMCCPFCNPJ,1,8)
                            ELSE NUMCCPFCNPJ END AS NR_CPF_CNPJ_RAIZ,
                       CASE WHEN LENGTH(NUMCCPFCNPJ)=14 
                            THEN MAX(IDCONSULTA) OVER(PARTITION BY SUBSTRING(NUMCCPFCNPJ,1,8), DATAMOVIMENTODWM) 
                            ELSE MAX(IDCONSULTA) OVER(PARTITION BY NUMCCPFCNPJ,DATAMOVIMENTODWM) END AS ID_MAX ,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN 'PF' ELSE 'PJ' END AS TIPO ,
                       DATAMOVIMENTODWM AS DT_MVM_DWM ,
					   MAX(DATAMOVIMENTODWM) OVER(PARTITION BY NUMCCPFCNPJ) AS DT_MVM_MAX ,
					   CASE WHEN VALORVENCERTOTAL>0 THEN 1 ELSE 0 END AS TOMADOR ,

					   CASE WHEN TIPO='PF' AND VALORVENCIDO_181_240_DIA + VALORVENCIDO_241_300_DIA +
                                               VALORVENCIDO_301_360_DIA + VALORVENCIDO_361_540_DIA  +
                                               VALORVENCIDOACIMA_540_DIA > 100  THEN 9  /*H*/
                            WHEN TIPO='PF' AND VALORVENCIDO_151_180_DIA  > 100  THEN 8  /*G*/
                            WHEN TIPO='PF' AND VALORVENCIDO_121_150_DIA  > 100  THEN 7  /*F*/
                            WHEN TIPO='PF' AND VALORVENCIDO_91_120_DIA   > 100  THEN 6  /*E*/
                            WHEN TIPO='PF' AND VALORVENCIDO_61_90_DIA    > 100  THEN 5  /*D*/
                            WHEN TIPO='PF' AND VALORVENCIDO_31_60_DIA    > 100  THEN 4  /*C*/
                            WHEN TIPO='PF' AND VALORVENCIDO_15_30_DIA    > 100  THEN 3  /*B*/
                            WHEN TIPO='PF' AND VALORVENCIDO_15_30_DIA    < 100  THEN 2  /*A*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_181_240_DIA + VALORVENCIDO_241_300_DIA +
                                               VALORVENCIDO_301_360_DIA + VALORVENCIDO_361_540_DIA  +
                                               VALORVENCIDOACIMA_540_DIA > 500  THEN 9 /* H */
                            WHEN TIPO='PJ' AND VALORVENCIDO_151_180_DIA  > 500  THEN 8  /*G*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_121_150_DIA  > 500  THEN 7  /*F*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_91_120_DIA   > 500  THEN 6  /*E*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_61_90_DIA    > 500  THEN 5  /*D*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_31_60_DIA    > 500  THEN 4  /*C*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_15_30_DIA    > 500  THEN 3  /*B*/
                            WHEN TIPO='PJ' AND VALORVENCIDO_15_30_DIA    < 500  THEN 2  /*A*/
                            ELSE -999 END AS RISCO_BC

        FROM BACEN_CONSULTA_EVENTUAL
		WHERE DATAMOVIMENTODWM BETWEEN '2015-04-01' AND '2019-09-01'
              AND CODMODALIDADEOPERACAO NOT IN (14,15,16,19,50) 
              ) AS MAE
        
		WHERE IDCONSULTA = ID_MAX 
        GROUP BY NR_CPF_CNPJ_RAIZ,DT_MVM_DWM ) AS FILHA
		  ) AS NETA

        ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM ;
DISCONNECT FROM CON1;
QUIT;


/*AND NUMCOOPERATIVA IN (4155,3001)*/
/*https://medium.com/@aklson_DS/how-to-properly-setup-your-github-repository-windows-version-ea596b398b*/


PROC FREQ DATA=SAFRA_BACEN;
TABLE DT_MVM_DWM RISCOMAX / NOCOL NOROW missing;
RUN;


PROC SQL;
Select count(*) as Total format=commax20.2 FROM SAFRA_BACEN;
quit;



/*----------------------------------------------------------------------*/
/*                   Olhar Cadastro Potencial em 2019                   */
/*     Olhar funcionalidade de ordenação ( casespecific ) em:           */
/* https://support.sas.com/resources/papers/proceedings17/1180-2017.pdf */
/*----------------------------------------------------------------------*/
/*AND NUMCOOPERATIVA= 4155*/

PROC SQL;
CREATE TABLE TESTE0 AS
SELECT * FROM SAFRA_BACEN
WHERE CONTAGEM<6;
RUN;


PROC SORT DATA=SAFRA_BACEN                  SORTSIZE=MAX;BY NR_CPF_CNPJ_RAIZ DT_MVM_DWM;RUN;
PROC SORT DATA=PLD.RECAL_VAR_CADASTRAIS_SEGMENTOS  SORTSIZE=MAX;BY NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO;RUN;

OPTIONS COMPRESS=YES;
PROC SQL;
CONNECT TO NETEZZA AS CON1(DATABASE=PRD_DWM SERVER=NTZP110 AUTHDOMAIN=NTZP110AUTH SQL_FUNCTIONS=ALL);
CREATE TABLE PLD.CADASTRO_POSITIVO AS 
SELECT A.*,
       B.DS_MODELO,
       B.IND_NAO_TOMADOR,
       B.DT_CLASSIFICACAO,
       B.NR_CPR,
       B.DEFAULT_ATRASO_RENEG,
       B.TEMPO_RELACIONAMENTO_MESES,
	   CASE WHEN C.RISCOMAX NE . THEN C.RISCOMAX
            WHEN D.RISCOMAX NE . THEN D.RISCOMAX
			ELSE -2 END AS RISCO_MAX,
	   CASE WHEN C.CONTAGEM NE . THEN C.CONTAGEM
            WHEN D.CONTAGEM NE . THEN D.CONTAGEM
			ELSE -2 END AS CONTAGEM,
	   CASE WHEN C.CLASSE_CONSULTA NE . THEN C.CLASSE_CONSULTA
            WHEN D.CLASSE_CONSULTA NE . THEN D.CLASSE_CONSULTA
			ELSE -2 END AS CLASSE_CONSULTA ,  
       E.SCORE_SERASA_TRAT

FROM CONNECTION TO CON1 

    ( SELECT *,
              LAG(VENC_ACM_181,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_ACM_181,
              LAG(VENC_ACM_181,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_ACM_181,
              LAG(VENC_ACM_181,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_ACM_181,

              LAG(VENC_151_180,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_151_180,
              LAG(VENC_151_180,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_151_180,
              LAG(VENC_151_180,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_151_180,

			  LAG(VENC_121_150,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_121_150,
              LAG(VENC_121_150,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_121_150,
              LAG(VENC_121_150,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_121_150,

              LAG(VENC_091_120,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_091_120,
              LAG(VENC_091_120,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_091_120,
              LAG(VENC_091_120,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_091_120,

			  LAG(VENC_061_090,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_061_090,
			  LAG(VENC_061_090,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_061_090,
			  LAG(VENC_061_090,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_061_090,

			  LAG(VENC_031_060,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_031_060,
			  LAG(VENC_031_060,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_031_060,
              LAG(VENC_031_060,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_031_060,

			  LAG(VENC_015_030,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_015_030,
			  LAG(VENC_015_030,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_015_030,
			  LAG(VENC_015_030,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_015_030,

			  LAG(VENCER_181_360,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_181_360,
			  LAG(VENCER_181_360,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_181_360,
			  LAG(VENCER_181_360,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_181_360,

              LAG(VENCER_091_180,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_091_180,
			  LAG(VENCER_091_180,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_091_180,
			  LAG(VENCER_091_180,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_091_180,

			  LAG(VENCER_061_090,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_061_090,
			  LAG(VENCER_061_090,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_061_090,
			  LAG(VENCER_061_090,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_061_090,

			  LAG(VENCER_031_060,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_031_060,
			  LAG(VENCER_031_060,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_031_060,
			  LAG(VENCER_031_060,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_031_060,

			  LAG(VENCER_015_030,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_015_030,
			  LAG(VENCER_015_030,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_015_030,
			  LAG(VENCER_015_030,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_015_030,

              LAG(VENCIDOTOTAL,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDOTOTAL,
			  LAG(VENCIDOTOTAL,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDOTOTAL,
			  LAG(VENCIDOTOTAL,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDOTOTAL,

			  LAG(VENCERTOTAL,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCERTOTAL,
			  LAG(VENCERTOTAL,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCERTOTAL,
			  LAG(VENCERTOTAL,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCERTOTAL,

			  LAG(QTD_OPERACOES,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_QTD_OPERACOES,
			  LAG(QTD_OPERACOES,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_QTD_OPERACOES,
			  LAG(QTD_OPERACOES,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_QTD_OPERACOES,

			  LAG(VENCIDO_CARTAO_CRED,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CARTAO_CRED,
			  LAG(VENCIDO_CARTAO_CRED,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CARTAO_CRED,
			  LAG(VENCIDO_CARTAO_CRED,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CARTAO_CRED,

			  LAG(VENCIDO_COM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_COM_DESC_FOLHA,
			  LAG(VENCIDO_COM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_COM_DESC_FOLHA,
			  LAG(VENCIDO_COM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_COM_DESC_FOLHA,

			  LAG(VENCIDO_SEM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_SEM_DESC_FOLHA,
			  LAG(VENCIDO_SEM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_SEM_DESC_FOLHA,
			  LAG(VENCIDO_SEM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_SEM_DESC_FOLHA,

              LAG(VENCIDO_CHEQUE_ESP,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CHEQUE_ESP,
			  LAG(VENCIDO_CHEQUE_ESP,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CHEQUE_ESP,
			  LAG(VENCIDO_CHEQUE_ESP,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CHEQUE_ESP,

			  LAG(VENCIDO_CAPITAL_GIRO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CAPITAL_GIRO,
			  LAG(VENCIDO_CAPITAL_GIRO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CAPITAL_GIRO,
			  LAG(VENCIDO_CAPITAL_GIRO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CAPITAL_GIRO,

			  LAG(VENCIDO_TIT_DESCONT,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_TIT_DESCONT,
			  LAG(VENCIDO_TIT_DESCONT,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_TIT_DESCONT,
			  LAG(VENCIDO_TIT_DESCONT,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_TIT_DESCONT,

			  LAG(VENCIDO_ROTAT_CARTAO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_ROTAT_CARTAO,
			  LAG(VENCIDO_ROTAT_CARTAO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_ROTAT_CARTAO,
			  LAG(VENCIDO_ROTAT_CARTAO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_ROTAT_CARTAO,

			  LAG(VENCER_CARTAO_CRED,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CARTAO_CRED,
			  LAG(VENCER_CARTAO_CRED,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CARTAO_CRED,
			  LAG(VENCER_CARTAO_CRED,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CARTAO_CRED,

              LAG(VENCER_SEM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_SEM_DESC_FOLHA,
			  LAG(VENCER_SEM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_SEM_DESC_FOLHA,
			  LAG(VENCER_SEM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_SEM_DESC_FOLHA,

              LAG(VENCER_COM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_COM_DESC_FOLHA,
			  LAG(VENCER_COM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_COM_DESC_FOLHA,
			  LAG(VENCER_COM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_COM_DESC_FOLHA,

			  LAG(VENCER_CHEQUE_ESP,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CHEQUE_ESP,
			  LAG(VENCER_CHEQUE_ESP,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CHEQUE_ESP,
			  LAG(VENCER_CHEQUE_ESP,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CHEQUE_ESP,

			  LAG(VENCER_CAPITAL_GIRO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CAPITAL_GIRO,
			  LAG(VENCER_CAPITAL_GIRO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CAPITAL_GIRO,
			  LAG(VENCER_CAPITAL_GIRO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CAPITAL_GIRO,

              LAG(VENCER_TIT_DESCONT,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_TIT_DESCONT,
              LAG(VENCER_TIT_DESCONT,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_TIT_DESCONT,
              LAG(VENCER_TIT_DESCONT,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_TIT_DESCONT,

			  LAG(VENCER_ROTAT_CARTAO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_ROTAT_CARTAO,
			  LAG(VENCER_ROTAT_CARTAO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_ROTAT_CARTAO,
			  LAG(VENCER_ROTAT_CARTAO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_ROTAT_CARTAO

        FROM
	(
        SELECT NR_CPF_CNPJ_RAIZ, 
               DT_MVM_DWM,
               MAX(TIPO) as TIPO,
               MAX(VENC_ACM_181)         AS VENC_ACM_181        ,
               MAX(VENC_151_180)         AS VENC_151_180        ,
               MAX(VENC_121_150)         AS VENC_121_150        , 
               MAX(VENC_091_120)         AS VENC_091_120        ,
               MAX(VENC_061_090)         AS VENC_061_090        , 
               MAX(VENC_031_060)         AS VENC_031_060        ,
               MAX(VENC_015_030)         AS VENC_015_030        ,
               MAX(VENCER_181_360)       AS VENCER_181_360      ,
               MAX(VENCER_091_180)       AS VENCER_091_180      ,
               MAX(VENCER_061_090)       AS VENCER_061_090      , 
               MAX(VENCER_031_060)       AS VENCER_031_060      , 
               MAX(VENCER_015_030)       AS VENCER_015_030      , 
               MAX(VENCIDOTOTAL)         AS VENCIDOTOTAL        ,
		       MAX(VENCERTOTAL)          AS VENCERTOTAL         , 
			   MAX(QTD_OPERACOES)        AS QTD_OPERACOES       ,
			   
			   MAX(VENCIDO_CARTAO_CRED)     AS VENCIDO_CARTAO_CRED    ,
			   MAX(VENCIDO_COM_DESC_FOLHA)  AS VENCIDO_COM_DESC_FOLHA ,
			   MAX(VENCIDO_SEM_DESC_FOLHA)  AS VENCIDO_SEM_DESC_FOLHA ,
			   MAX(VENCIDO_CHEQUE_ESP)      AS VENCIDO_CHEQUE_ESP     ,
			   MAX(VENCIDO_CAPITAL_GIRO)    AS VENCIDO_CAPITAL_GIRO   ,
			   MAX(VENCIDO_TIT_DESCONT)     AS VENCIDO_TIT_DESCONT    ,
               MAX(VENCIDO_ROTAT_CARTAO)    AS VENCIDO_ROTAT_CARTAO   ,

			   MAX(VENCER_CARTAO_CRED)     AS VENCER_CARTAO_CRED    ,
			   MAX(VENCER_COM_DESC_FOLHA)  AS VENCER_COM_DESC_FOLHA ,
			   MAX(VENCER_SEM_DESC_FOLHA)  AS VENCER_SEM_DESC_FOLHA ,
			   MAX(VENCER_CHEQUE_ESP)      AS VENCER_CHEQUE_ESP     ,
			   MAX(VENCER_CAPITAL_GIRO)    AS VENCER_CAPITAL_GIRO   ,
			   MAX(VENCER_TIT_DESCONT)     AS VENCER_TIT_DESCONT    ,
               MAX(VENCER_ROTAT_CARTAO)    AS VENCER_ROTAT_CARTAO   ,

			   MAX(VALORPREJUIZOTOTAL)   AS VALORPREJUIZOTOTAL  ,
			   MAX(VALORCREDITOLIBERAR)  AS VALORCREDITOLIBERAR ,
			   MAX(VALORRISCOTOTAL)      AS VALORRISCOTOTAL     ,
			   MAX(BAIXA_PREJ_ATE12)     AS BAIXA_PREJ_ATE12    ,
			   MAX(BAIXA_PREJ_ATE12_48)  AS BAIXA_PREJ_ATE12_48 ,
			   MAX(BAIXA_PREJ_ACM_48)    AS BAIXA_PREJ_ACM_48   ,
			   MAX(ENDIVIDAMENTO_CURTO)  AS ENDIVIDAMENTO_CURTO ,
			   MAX(ENDIVIDAMENTO_LONGO)  AS ENDIVIDAMENTO_LONGO ,
		  CASE WHEN MAX(VENCERTOTAL)>0 THEN 1 ELSE 0 END AS TOMADOR   
 
               FROM 
			 (  SELECT DISTINCT IDCONSULTA,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN NUMCCPFCNPJ
                            WHEN LENGTH(NUMCCPFCNPJ)=14 THEN SUBSTRING(NUMCCPFCNPJ,1,8)
                            ELSE NUMCCPFCNPJ END AS NR_CPF_CNPJ_RAIZ,
                       CASE WHEN LENGTH(NUMCCPFCNPJ)=14 
                            THEN MAX(IDCONSULTA) OVER(PARTITION BY SUBSTRING(NUMCCPFCNPJ,1,8), DATAMOVIMENTODWM) 
                            ELSE MAX(IDCONSULTA) OVER(PARTITION BY NUMCCPFCNPJ,DATAMOVIMENTODWM) END AS ID_MAX ,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN 'PF' ELSE 'PJ' END AS TIPO ,
                       DATAMOVIMENTODWM AS DT_MVM_DWM,
                       VALORVENCIDO_1_14_DIA +
                       VALORVENCIDO_15_30_DIA    AS VENC_015_030 ,
                       VALORVENCIDO_31_60_DIA    AS VENC_031_060 ,
                       VALORVENCIDO_61_90_DIA    AS VENC_061_090 ,
                       VALORVENCIDO_91_120_DIA   AS VENC_091_120 ,
                       VALORVENCIDO_121_150_DIA  AS VENC_121_150 ,
                       VALORVENCIDO_151_180_DIA  AS VENC_151_180 ,
                       VALORVENCIDO_181_240_DIA  + 
                       VALORVENCIDO_241_300_DIA  +
                       VALORVENCIDO_301_360_DIA  + 
                       VALORVENCIDO_361_540_DIA  +
                       VALORVENCIDOACIMA_540_DIA AS VENC_ACM_181 ,
					   VALORVENCIDOTOTAL         AS VENCIDOTOTAL ,
					   VALORVENCERATE_30_DIA     AS VENCER_015_030 ,
                       VALORVENCER_31_60_DIA     AS VENCER_031_060 ,
                       VALORVENCER_61_90_DIA     AS VENCER_061_090 ,
                       VALORVENCER_91_180_DIA    AS VENCER_091_180 ,
                       VALORVENCER_181_360_DIA	 AS VENCER_181_360 ,
                       VALORVENCER_361_720_DIA   AS VENCER_361_720 ,
					   VALORVENCER_721_1080_DIA  + 
                       VALORVENCER_1081_1440_DIA +
					   VALORVENCER_1441_1800_DIA + 
                       VALORVENCER_1801_5400_DIA +
                       VALORVENCERACIMA_5400_DIA AS VENCER_ACM_721 ,
					   VALORVENCERTOTAL	AS VENCERTOTAL ,
					   QTDOPERACOESCREDITO AS QTD_OPERACOES,
					   VALORPREJUIZOTOTAL,
					   CODMODALIDADEOPERACAO,
					   CODSUBMODALIDADEOPERACAO,
					   VALORCREDITOLIBERAR,
                       VALORRISCOTOTAL,
					   VALORCREDITOBXAPREJUIZO12MM AS BAIXA_PREJ_ATE12,
                       VALORCREDITOBXAPREJUIZO12_48MM AS BAIXA_PREJ_ATE12_48,
                       VALORCREDITOBXAPJZACIMA_48MM AS BAIXA_PREJ_ACM_48,
					   VALORVENCIDO_1_14_DIA     +
                       VALORVENCIDO_15_30_DIA    +
                       VALORVENCIDO_31_60_DIA    + 
                       VALORVENCIDO_61_90_DIA    + 
                       VALORVENCIDO_91_120_DIA   + 
                       VALORVENCIDO_121_150_DIA  +
                       VALORVENCIDO_151_180_DIA  +
                       VALORVENCIDO_181_240_DIA  + 
                       VALORVENCIDO_241_300_DIA  +
                       VALORVENCIDO_301_360_DIA  AS ENDIVIDAMENTO_CURTO ,
                       VALORVENCIDO_361_540_DIA  +
                       VALORVENCIDOACIMA_540_DIA AS ENDIVIDAMENTO_LONGO ,

					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (10,18)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CARTAO_CRED ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=2
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_COM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=3
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_SEM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=13
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CHEQUE_ESP ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (15,16,17)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CAPITAL_GIRO,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO IN (1,2,3,98,99)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_TIT_DESCONT,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO=4
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_ROTAT_CARTAO ,

					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (10,18)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CARTAO_CRED ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=2
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_COM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=3
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_SEM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=13
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CHEQUE_ESP ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (15,16,17)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CAPITAL_GIRO,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO IN (1,2,3,98,99)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_TIT_DESCONT,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO=4
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_ROTAT_CARTAO

        FROM BACEN_CONSULTA_EVENTUAL
		WHERE DATAMOVIMENTODWM BETWEEN '2016-12-01' AND '2018-05-01' 
              AND CODMODALIDADEOPERACAO NOT IN (14,15,16,19,50) ) AS MAE
        
		WHERE IDCONSULTA=ID_MAX 
		GROUP BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM 
        ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM ) AS MAE


		) AS A

INNER JOIN PLD.RECAL_VAR_CADASTRAIS_SEGMENTOS AS B ON A.NR_CPF_CNPJ_RAIZ=B.NR_CPF_CNPJ_RAIZ 
           AND INTNX('month',A.DT_MVM_DWM,-2) = B.DT_CLASSIFICACAO 
           AND B.MOTIVO_REJEICAO='' AND B.DEFAULT_ATRASO_RENEG<>-2 

LEFT JOIN SAFRA_BACEN        AS C ON A.NR_CPF_CNPJ_RAIZ=C.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM = C.DT_MVM_DWM
LEFT JOIN SAFRA_BACEN        AS D ON A.NR_CPF_CNPJ_RAIZ=D.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM = INTNX('month',D.DT_MVM_DWM,-1)
LEFT JOIN PLD.SCORE_SERASA_RECALIBRAGEM AS E ON (PUT(INPUT(A.NR_CPF_CNPJ_RAIZ,16.),Z11.)=PUT(INPUT(E.NR_CPF_CNPJ_RAIZ,16.),Z11.))

ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM  ;
DISCONNECT FROM CON1;
QUIT;


PROC FREQ DATA=PLD.CADASTRO_POSITIVO noprint;
TABLE SCORE_SERASA_TRAT  / out=teste NOROW  NOPERCENT Missing;
RUN;

PROC FREQ DATA=PLD.CADASTRO_POSITIVO;
TABLE RISCO_MAX* DEFAULT_ATRASO_RENEG / NOPERCENT NOCOL Missing;
RUN;

proc sql;
select count(*) as total2 format=commax20.2 from PLD.RECAL_VAR_CADASTRAIS_SEGMENTOS; /*1,173,111*/
select count(*) as total3 format=commax20.2 from PLD.CADASTRO_POSITIVO; /*1,083,027*/
select count(*) as total4 format=commax20.2 from SAFRA_BACEN; /*236,705,212*/
quit;




PROC FREQ DATA=PLD.CADASTRO_POSITIVO NOPRINT;
TABLE CONTAGEM CLASSE_CONSULTA /OUT=SAIDA MISSING;
RUN;


/*--------------------------------------------------------*/
/*---   CHECAGEM POR CLASSE DE CONSULTA                ---*/
/*--------------------------------------------------------*/

PROC SQL;
CREATE TABLE CATEGORIA0 AS
SELECT CLASSE_CONSULTA,RISCO_MAX,TIPO,
       SUM(TOTAL) AS TOTAL LABEL='TOTAL DE OBS',
	   SUM(DEFAULT1) AS DEFAULT1 ,
	   SUM(DEFAULT1)/SUM(TOTAL) AS PERC1 LABEL='% DEFAULT'
FROM ( SELECT CASE WHEN CLASSE_CONSULTA =-1 THEN 5
                   WHEN CLASSE_CONSULTA <=2 THEN 2
                   ELSE CLASSE_CONSULTA END AS CLASSE_CONSULTA,RISCO_MAX,TIPO,DEFAULT_ATRASO_RENEG,
              CASE WHEN DEFAULT_ATRASO_RENEG=1 THEN COUNT(*) ELSE 0 END AS DEFAULT1,
              COUNT(*) AS TOTAL
        FROM PLD.CADASTRO_POSITIVO
        WHERE IND_NAO_TOMADOR=0
        GROUP BY CLASSE_CONSULTA,RISCO_MAX,TIPO,DEFAULT_ATRASO_RENEG 
 )
GROUP BY CLASSE_CONSULTA,RISCO_MAX,TIPO
ORDER BY TIPO,RISCO_MAX,CLASSE_CONSULTA;
QUIT;

PROC TRANSPOSE DATA=CATEGORIA0 OUT=RELAT.CATEGORIA0  PREFIX=CLASSE_;
BY TIPO RISCO_MAX;
ID CLASSE_CONSULTA;
VAR PERC1 TOTAL;
RUN;




/*ESCORE SERASA*/
PROC SQL;
CREATE TABLE RELAT.SERASA AS
SELECT RISCO_MAX,DS_MODELO,
       COUNT(*) AS TOTAL_OBS ,
       AVG(SCORE_SERASA_TRAT) AS SCORE_SERASA_AVG ,
	   SQRT(VAR(SCORE_SERASA_TRAT)) AS SCORE_SERASA_STD ,
	   SQRT(VAR(SCORE_SERASA_TRAT))/AVG(SCORE_SERASA_TRAT) AS SCORE_SERASA_CV ,
	   MIN(SCORE_SERASA_TRAT) AS SERASA_MIN ,
	   MAX(SCORE_SERASA_TRAT) AS SERASA_MAX 

FROM PLD.CADASTRO_POSITIVO
WHERE CONTAGEM>=36 AND IND_NAO_TOMADOR=0
GROUP BY RISCO_MAX,DS_MODELO
ORDER BY RISCO_MAX,DS_MODELO ;
QUIT;


DATA RELAT.CADASTRO_POSITIVO;
SET PLD.CADASTRO_POSITIVO;
WHERE CONTAGEM>=36 AND SCORE_SERASA_TRAT NE . AND IND_NAO_TOMADOR=0;
KEEP TIPO RISCO_MAX DS_MODELO SCORE_SERASA_TRAT NR_CPF_CNPJ_RAIZ;
RUN;


/*--------------------------------------------------------*/
/*---   CHECAGEM INICIAL DO DEFAULT POR CATEGORIA BC   ---*/
/*--------------------------------------------------------*/

PROC SQL;
CREATE TABLE CATEGORIA AS
SELECT RISCO_MAX,TIPO,DEFAULT_ATRASO_RENEG,COUNT(*) as total
FROM PLD.CADASTRO_POSITIVO
WHERE CONTAGEM>=6 AND IND_NAO_TOMADOR=0
GROUP BY RISCO_MAX,TIPO,DEFAULT_ATRASO_RENEG
ORDER BY TIPO, RISCO_MAX;
QUIT;

PROC TRANSPOSE DATA=CATEGORIA OUT=CATEGORIA(DROP=_NAME_) PREFIX=DEFAULT;
BY TIPO RISCO_MAX ;
ID DEFAULT_ATRASO_RENEG;
VAR TOTAL;
RUN;

DATA RELAT.CATEGORIA;SET CATEGORIA;
TOTAL=DEFAULT0+DEFAULT1;
PERC0=DEFAULT0/(DEFAULT0+DEFAULT1);
PERC1=DEFAULT1/(DEFAULT0+DEFAULT1);
RUN;

PROC SQL;
CREATE TABLE CATEGORIAX AS
SELECT RISCO_MAX,DS_MODELO,DEFAULT_ATRASO_RENEG,count(*) as total
FROM PLD.CADASTRO_POSITIVO
WHERE CONTAGEM>=6 AND IND_NAO_TOMADOR=0
GROUP BY RISCO_MAX,DS_MODELO,DEFAULT_ATRASO_RENEG
ORDER BY DS_MODELO, RISCO_MAX;
QUIT;

PROC TRANSPOSE DATA=CATEGORIAX OUT=CATEGORIAX(DROP=_NAME_) PREFIX=DEFAULT;
BY DS_MODELO RISCO_MAX ;
ID DEFAULT_ATRASO_RENEG;
VAR TOTAL;
RUN;

DATA RELAT.CATEGORIAX;SET CATEGORIAX;
TOTAL=DEFAULT0+DEFAULT1;
PERC0=DEFAULT0/(DEFAULT0+DEFAULT1);
PERC1=DEFAULT1/(DEFAULT0+DEFAULT1);
RUN;


/*------------------------------------------------------------------*/
/*-- ORGANIZANDO VARIAVEIS PARA FLORESTA ALEATORIA                --*/
/*------------------------------------------------------------------*/

PROC CONTENTS DATA=PLD.CADASTRO_POSITIVO
(DROP=NR_CPF_CNPJ_RAIZ DT_MVM_DWM DT_CLASSIFICACAO DS_MODELO IND_NAO_TOMADOR  
      CLASSE_CONSULTA CONTAGEM TIPO NR_CPR DEFAULT_ATRASO_RENEG TOMADOR  
      TEMPO_RELACIONAMENTO_MESES SCORE_SERASA_TRAT) NOPRINT OUT=C(keep=NAME);
run;


PROC SQL NOPRINT;
SELECT NAME INTO:INPUTS SEPARATED BY " " FROM C;
QUIT;
%PUT &INPUTS.;

/*--------------------------------------------------------*/
/*--- SELECIONAR AMOSTRA DE TREINO E TESTE             ---*/
/*--------------------------------------------------------*/

PROC SURVEYSELECT DATA=PLD.CADASTRO_POSITIVO(WHERE=(CONTAGEM>=6 AND IND_NAO_TOMADOR=0)) REPS=2
OUT=AMOSTRA METHOD=srs SAMPRATE=0.75 SEED=12221;
RUN;


/*ODS OUTPUT VariableImportance=RELAT.VarImp;
PROC HPFOREST DATA=AMOSTRA(WHERE=(Replicate=1))
              MAXTREES=250 VARS_TO_TRY=50 BALANCE=YES SEED=666 TRAINFRACTION=0.90 
              MAXDEPTH=40 LEAFSIZE=30 CATBINS=30 PRUNEFRACTION=0.03 ALPHA=0.85;
TARGET DEFAULT_ATRASO_RENEG / LEVEL=BINARY   ;
INPUT &INPUTS.       / LEVEL=INTERVAL  ;
INPUT NR_CPR         / LEVEL=NOMINAL   ;
ODS OUTPUT FITSTATISTICS=FITSTATS ;
SCORE OUT=SCORED;
SAVE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/bin";
RUN;


PROC NPAR1WAY DATA=SCORED EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SCORED(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;

PROC HP4SCORE DATA=AMOSTRA(WHERE=(Replicate=2)) seed=666;
ID NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO NR_CPR DS_MODELO TIPO 
   RISCO_max TEMPO_RELACIONAMENTO_MESES;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/bin"
OUT=SCORED2(DROP=_WARN_);
RUN;


PROC NPAR1WAY DATA=SCORED2 EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SCORED(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;*/

/*--------------------------------------------------------*/
/*---  PLD.CADASTRO_POSITIVO(WHERE=(TIPO='PF'))        ---*/
/*--------------------------------------------------------*/

ODS OUTPUT VariableImportance=RELAT.VarImp_PF;
PROC HPFOREST DATA=AMOSTRA(WHERE=(Replicate=1 AND TIPO='PF'))
              MAXTREES=200 VARS_TO_TRY=50 BALANCE=NO SEED=666 TRAINFRACTION=0.85 
              MAXDEPTH=40 LEAFSIZE=30 CATBINS=30 PRUNEFRACTION=0.02 ALPHA=0.85;
TARGET DEFAULT_ATRASO_RENEG      / LEVEL=BINARY   ;
INPUT /*&INPUTS.*/
LAG1_VENC_091_120 LAG2_QTD_OPERACOES VALORCREDITOLIBERAR
ENDIVIDAMENTO_CURTO VENC_121_150 VENCER_CARTAO_CRED
VENC_061_090 VENCIDO_COM_DESC_FOLHA LAG2_VENCIDO_CHEQUE_ESP
LAG1_VENCIDO_COM_DESC_FOLHA LAG3_VENCIDO_COM_DESC_FOLHA LAG3_VENCIDO_CARTAO_CRED
LAG1_VENC_031_060 LAG1_VENCER_CARTAO_CRED LAG1_VENCIDO_SEM_DESC_FOLHA
VENCIDO_SEM_DESC_FOLHA LAG1_VENCIDO_CHEQUE_ESP VENCIDO_CHEQUE_ESP
LAG3_VENCER_TIT_DESCONT VENCER_TIT_DESCONT LAG2_VENCER_SEM_DESC_FOLHA
VENCIDOTOTAL VENC_031_060 LAG2_VENC_031_060
LAG1_VENCIDOTOTAL LAG2_VENCER_CARTAO_CRED VENC_091_120
LAG2_VENCIDO_SEM_DESC_FOLHA VENC_015_030 LAG2_VENC_015_030   / LEVEL=Interval ;
ODS OUTPUT FITSTATISTICS=FITSTATS;
SCORE OUT=SCORED_PF;
SAVE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PF_RESTR.bin";
RUN;


ODS OUTPUT VariableImportance=RELAT.VarImp_PJ;
PROC HPFOREST DATA=AMOSTRA(WHERE=(Replicate=1 AND TIPO='PJ'))
              MAXTREES=200 VARS_TO_TRY=50 BALANCE=NO SEED=666 TRAINFRACTION=0.85 
              MAXDEPTH=30 LEAFSIZE=30 CATBINS=30 PRUNEFRACTION=0.02 ALPHA=0.90;
TARGET DEFAULT_ATRASO_RENEG      / LEVEL=BINARY   ;
INPUT  /*&INPUTS.*/ 
RISCO_MAX LAG3_VENCIDO_CARTAO_CRED LAG1_VENCIDO_TIT_DESCONT
QTD_OPERACOES VALORCREDITOLIBERAR LAG1_VENC_031_060
VENC_015_030 VENC_061_090 LAG1_QTD_OPERACOES
VENC_031_060 LAG3_QTD_OPERACOES LAG2_VENC_031_060
LAG2_QTD_OPERACOES ENDIVIDAMENTO_CURTO VENCIDO_TIT_DESCONT
LAG1_VENC_091_120 LAG2_VENCIDO_TIT_DESCONT VENCIDO_CARTAO_CRED
LAG1_VENC_061_090 VENCIDOTOTAL VENC_121_150
LAG2_VENC_015_030 LAG2_VENCIDOTOTAL LAG2_VENCIDO_CARTAO_CRED
LAG2_VENC_061_090 LAG3_VENC_031_060 LAG1_VENCIDOTOTAL
LAG1_VENC_015_030 VENCER_CARTAO_CRED VENC_091_120 / LEVEL=Interval ;
ODS OUTPUT FITSTATISTICS=FITSTATS;
SCORE OUT=SCORED_PJ;
SAVE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PJ_RESTR.bin";
RUN;




/*--------------------------------------------------------*/
/*---   KS PARA PF E PJ NA AMOSTRA DE TREINO (REP=1)   ---*/
/*--------------------------------------------------------*/

PROC NPAR1WAY DATA=SCORED_PF EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDAPF(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;

PROC NPAR1WAY DATA=SCORED_PJ EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDAPJ(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;

/*--------------------------------------------------------*/
/*--- TAXA DE ACERTO PARA PF E PJ NA AMOSTRA DE TREINO ---*/
/*--------------------------------------------------------*/

PROC FREQ DATA=SCORED_PF;
/*WHERE CONTAGEM>=6 AND IND_NAO_TOMADOR=0;*/
TABLE DEFAULT_ATRASO_RENEG*I_DEFAULT_ATRASO_RENEG / NOPERCENT nocol;
RUN;

PROC FREQ DATA=SCORED_PJ;
/*WHERE CONTAGEM>=6 AND IND_NAO_TOMADOR=0;*/
TABLE DEFAULT_ATRASO_RENEG*I_DEFAULT_ATRASO_RENEG / NOPERCENT nocol;
RUN;


/*--------------------------------------------------------*/
/*---   KS PARA PF E PJ NA AMOSTRA DE TESTE (REP=2)    ---*/
/*--------------------------------------------------------*/

PROC HP4SCORE DATA=AMOSTRA(WHERE=(Replicate=2 AND TIPO='PF')) seed=666;
ID NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO NR_CPR DS_MODELO TIPO ;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PF_RESTR.bin"
OUT=SCORED2PF(DROP=_WARN_);
RUN;

PROC HP4SCORE DATA=AMOSTRA(WHERE=(Replicate=2 AND TIPO='PJ')) seed=666;
ID NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO NR_CPR DS_MODELO TIPO ;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PJ_RESTR.bin"
OUT=SCORED2PJ(DROP=_WARN_);
RUN;

PROC NPAR1WAY DATA=SCORED2PF EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDA(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;

PROC NPAR1WAY DATA=SCORED2PJ EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDA(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;


/*--------------------------------------------------------*/
/*--- TAXA DE ACERTO PARA PF E PJ NA AMOSTRA DE TREINO ---*/
/*--------------------------------------------------------*/
/*
PROC FREQ DATA=SCORED2PF;
TABLE DEFAULT_ATRASO_RENEG*I_DEFAULT_ATRASO_RENEG / NOPERCENT nocol;
RUN;

PROC FREQ DATA=SCORED2PJ;
TABLE DEFAULT_ATRASO_RENEG*I_DEFAULT_ATRASO_RENEG / NOPERCENT nocol;
RUN;
*/


/*--------------------------------------------------------*/
/*--- CHECAGEM DO KS E TAXA DE ACERTO NO TESTE         ---*/
/*--------------------------------------------------------*/

PROC HP4SCORE DATA=PLD.CADASTRO_POSITIVO(WHERE=(TIPO='PF')) SEED=666;
/*CONTAGEM>=6 AND IND_NAO_TOMADOR=0*/
ID NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO NR_CPR DS_MODELO TIPO CONTAGEM RISCO_MAX IND_NAO_TOMADOR;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PF_RESTR.bin"
OUT=SCORALLPF(DROP=_WARN_);
RUN;

PROC HP4SCORE DATA=PLD.CADASTRO_POSITIVO(WHERE=(TIPO='PJ')) SEED=666;
/*CONTAGEM>=6 AND IND_NAO_TOMADOR=0*/
ID NR_CPF_CNPJ_RAIZ DT_CLASSIFICACAO NR_CPR DS_MODELO TIPO CONTAGEM RISCO_MAX IND_NAO_TOMADOR;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PJ_RESTR.bin"
OUT=SCORALLPJ(DROP=_WARN_);
RUN;


PROC NPAR1WAY DATA=SCORALLPF EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDA(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;

PROC NPAR1WAY DATA=SCORALLPJ EDF;
CLASS DEFAULT_ATRASO_RENEG;
VAR P_DEFAULT_ATRASO_RENEG1;
OUTPUT OUT=SAIDA(RENAME=_D_=KS DROP=_KS_ _KSA_ _PKSA_ _CM_ _CMA_ _K_ _KA_ P_KSA P_KA);
RUN;



/*----------------------------------------------------------------------*/
/*                                                                      */
/*          ESTATÍSTICAS DESCRITIVAS CONSIDERANDO ESCORES               */
/*                                                                      */
/*----------------------------------------------------------------------*/

DATA SCORALL;
SET SCORALLPF SCORALLPJ;
RUN;


PROC SQL;
CREATE TABLE CATEGORIA AS
SELECT TIPO,RISCO_MAX,DEFAULT_ATRASO_RENEG,count(*) as total
FROM SCORALL
WHERE P_DEFAULT_ATRASO_RENEG1<=0.10 AND CONTAGEM>=32 AND IND_NAO_TOMADOR=0
GROUP BY TIPO,RISCO_MAX,DEFAULT_ATRASO_RENEG
ORDER BY TIPO,RISCO_MAX;
QUIT;

PROC TRANSPOSE DATA=CATEGORIA OUT=CATEGORIA(DROP=_NAME_) PREFIX=DEFAULT;
BY TIPO RISCO_MAX;
ID DEFAULT_ATRASO_RENEG;
VAR TOTAL;
RUN;


DATA RELAT.CATEGORIAY(RENAME=(DEFAULT1=DEFAULT_DEPOIS PERC1=PERC_DEPOIS) DROP=PERC0 DEFAULT0);
RETAIN TIPO RISCO_MAX DEFAULT_ANTES PERC_ANTES;
MERGE RELAT.CATEGORIA(RENAME=(DEFAULT1=DEFAULT_ANTES PERC1=PERC_ANTES) DROP=PERC0 TOTAL) 
            CATEGORIA;
BY TIPO RISCO_MAX;
TOTAL=DEFAULT0+DEFAULT1;
PERC0=DEFAULT0/(DEFAULT0+DEFAULT1);
PERC1=DEFAULT1/(DEFAULT0+DEFAULT1);
RUN;




PROC SQL;
CREATE TABLE CATEGORIAYY AS
SELECT RISCO_MAX,DS_MODELO,DEFAULT_ATRASO_RENEG,COUNT(*) as TOTAL
FROM SCORALL
WHERE P_DEFAULT_ATRASO_RENEG1<=0.10 AND CONTAGEM>=36 AND IND_NAO_TOMADOR=0
GROUP BY RISCO_MAX,DS_MODELO,DEFAULT_ATRASO_RENEG
ORDER BY DS_MODELO, RISCO_MAX;
QUIT;

PROC TRANSPOSE DATA=CATEGORIAYY OUT=CATEGORIAYY(DROP=_NAME_) PREFIX=DEFAULT;
BY DS_MODELO RISCO_MAX ;
ID DEFAULT_ATRASO_RENEG;
VAR TOTAL;
RUN;


DATA RELAT.CATEGORIAYY(RENAME=(DEFAULT1=DEFAULT_DEPOIS PERC1=PERC_DEPOIS) DROP=PERC0 DEFAULT0);
RETAIN DS_MODELO RISCO_MAX DEFAULT_ANTES PERC_ANTES;
MERGE RELAT.CATEGORIAX(RENAME=(DEFAULT1=DEFAULT_ANTES PERC1=PERC_ANTES) DROP=PERC0 TOTAL) 
            CATEGORIAYY;
BY DS_MODELO RISCO_MAX ;
TOTAL=DEFAULT0+DEFAULT1;
PERC0=DEFAULT0/(DEFAULT0+DEFAULT1);
PERC1=DEFAULT1/(DEFAULT0+DEFAULT1);
RUN;


/*----------------------------------------------------------------------*/
/*                                                                      */
/*                                                                      */
/*                                                                      */
/*----------------------------------------------------------------------*/

PROC SQL;
CREATE TABLE CORTE AS
SELECT CLASSE_PROB,TIPO,DEFAULT_ATRASO_RENEG,
       COUNT(*) AS CONTAGEM
FROM 
( SELECT * ,
		CASE WHEN P_DEFAULT_ATRASO_RENEG1<=0.05 then 0
             WHEN P_DEFAULT_ATRASO_RENEG1<=0.08 then 1
		     WHEN P_DEFAULT_ATRASO_RENEG1<=0.10 then 2
		     WHEN P_DEFAULT_ATRASO_RENEG1<=0.15 then 3
		     WHEN P_DEFAULT_ATRASO_RENEG1<=0.18 then 4
             WHEN P_DEFAULT_ATRASO_RENEG1<=0.20 then 5
		     WHEN P_DEFAULT_ATRASO_RENEG1<=0.23 then 6
			 WHEN P_DEFAULT_ATRASO_RENEG1<=0.25 then 7
		     ELSE 8 END AS CLASSE_PROB
FROM SCORALL
WHERE CONTAGEM>=36 AND RISCO_MAX<=2 AND IND_NAO_TOMADOR=0
) AS MAE
GROUP BY CLASSE_PROB,TIPO,DEFAULT_ATRASO_RENEG
ORDER BY TIPO,CLASSE_PROB;
QUIT;


PROC TRANSPOSE DATA=CORTE OUT=CORTEP(DROP=_NAME_) PREFIX=DEFAULT;
BY TIPO CLASSE_PROB;
ID DEFAULT_ATRASO_RENEG;
VAR CONTAGEM;
RUN;


DATA RELAT.CORTEP(DROP=DEFAULT0);
SET CORTEP;
BY TIPO;
TOTAL    = DEFAULT0+DEFAULT1;
IF FIRST.TIPO THEN TOTAL_CUM=0;
TOTAL_CUM+TOTAL;
IF FIRST.TIPO THEN DEFAULTX=0;
DEFAULTX +DEFAULT1;

PERC1=DEFAULT1/TOTAL;
PERCX=DEFAULTX/TOTAL_CUM;
RUN;


/*----------------------------------------------------------------------*/
/*                                                                      */
/*                                                                      */
/*                                                                      */
/*----------------------------------------------------------------------*/


PROC SQL;
CONNECT TO NETEZZA AS CON1(DATABASE=PRD_DWM SERVER=NTZP110 AUTHDOMAIN=NTZP110AUTH SQL_FUNCTIONS=ALL);
CREATE TABLE CADASTRO_POSITIVO2019 AS 
SELECT A.*,
	   CASE WHEN B.RISCOMAX NE . THEN B.RISCOMAX
            WHEN C.RISCOMAX NE . THEN C.RISCOMAX
			ELSE -2 END AS RISCO_MAX ,
	   CASE WHEN B.CONTAGEM NE . THEN B.CONTAGEM
            WHEN C.CONTAGEM NE . THEN C.CONTAGEM
			ELSE -2 END AS CONTAGEM ,
	   CASE WHEN B.CLASSE_CONSULTA NE . THEN B.CLASSE_CONSULTA
            WHEN C.CLASSE_CONSULTA NE . THEN C.CLASSE_CONSULTA
			ELSE -2 END AS CLASSE_CONSULTA 

FROM CONNECTION TO CON1 

    ( SELECT *,
              LAG(VENC_ACM_181,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_ACM_181,
              LAG(VENC_ACM_181,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_ACM_181,
              LAG(VENC_ACM_181,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_ACM_181,

              LAG(VENC_151_180,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_151_180,
              LAG(VENC_151_180,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_151_180,
              LAG(VENC_151_180,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_151_180,

			  LAG(VENC_121_150,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_121_150,
              LAG(VENC_121_150,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_121_150,
              LAG(VENC_121_150,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_121_150,

              LAG(VENC_091_120,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_091_120,
              LAG(VENC_091_120,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_091_120,
              LAG(VENC_091_120,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_091_120,

			  LAG(VENC_061_090,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_061_090,
			  LAG(VENC_061_090,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_061_090,
			  LAG(VENC_061_090,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_061_090,

			  LAG(VENC_031_060,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_031_060,
			  LAG(VENC_031_060,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_031_060,
              LAG(VENC_031_060,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_031_060,

			  LAG(VENC_015_030,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENC_015_030,
			  LAG(VENC_015_030,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENC_015_030,
			  LAG(VENC_015_030,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENC_015_030,

			  LAG(VENCER_181_360,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_181_360,
			  LAG(VENCER_181_360,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_181_360,
			  LAG(VENCER_181_360,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_181_360,

              LAG(VENCER_091_180,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_091_180,
			  LAG(VENCER_091_180,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_091_180,
			  LAG(VENCER_091_180,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_091_180,

			  LAG(VENCER_061_090,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_061_090,
			  LAG(VENCER_061_090,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_061_090,
			  LAG(VENCER_061_090,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_061_090,

			  LAG(VENCER_031_060,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_031_060,
			  LAG(VENCER_031_060,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_031_060,
			  LAG(VENCER_031_060,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_031_060,

			  LAG(VENCER_015_030,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_015_030,
			  LAG(VENCER_015_030,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_015_030,
			  LAG(VENCER_015_030,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_015_030,

              LAG(VENCIDOTOTAL,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDOTOTAL,
			  LAG(VENCIDOTOTAL,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDOTOTAL,
			  LAG(VENCIDOTOTAL,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDOTOTAL,

			  LAG(VENCERTOTAL,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCERTOTAL,
			  LAG(VENCERTOTAL,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCERTOTAL,
			  LAG(VENCERTOTAL,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCERTOTAL,

			  LAG(QTD_OPERACOES,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_QTD_OPERACOES,
			  LAG(QTD_OPERACOES,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_QTD_OPERACOES,
			  LAG(QTD_OPERACOES,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_QTD_OPERACOES,

			  LAG(VENCIDO_CARTAO_CRED,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CARTAO_CRED,
			  LAG(VENCIDO_CARTAO_CRED,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CARTAO_CRED,
			  LAG(VENCIDO_CARTAO_CRED,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CARTAO_CRED,

			  LAG(VENCIDO_COM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_COM_DESC_FOLHA,
			  LAG(VENCIDO_COM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_COM_DESC_FOLHA,
			  LAG(VENCIDO_COM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_COM_DESC_FOLHA,

			  LAG(VENCIDO_SEM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_SEM_DESC_FOLHA,
			  LAG(VENCIDO_SEM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_SEM_DESC_FOLHA,
			  LAG(VENCIDO_SEM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_SEM_DESC_FOLHA,

              LAG(VENCIDO_CHEQUE_ESP,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CHEQUE_ESP,
			  LAG(VENCIDO_CHEQUE_ESP,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CHEQUE_ESP,
			  LAG(VENCIDO_CHEQUE_ESP,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CHEQUE_ESP,

			  LAG(VENCIDO_CAPITAL_GIRO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_CAPITAL_GIRO,
			  LAG(VENCIDO_CAPITAL_GIRO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_CAPITAL_GIRO,
			  LAG(VENCIDO_CAPITAL_GIRO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_CAPITAL_GIRO,

			  LAG(VENCIDO_TIT_DESCONT,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_TIT_DESCONT,
			  LAG(VENCIDO_TIT_DESCONT,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_TIT_DESCONT,
			  LAG(VENCIDO_TIT_DESCONT,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_TIT_DESCONT,

			  LAG(VENCIDO_ROTAT_CARTAO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCIDO_ROTAT_CARTAO,
			  LAG(VENCIDO_ROTAT_CARTAO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCIDO_ROTAT_CARTAO,
			  LAG(VENCIDO_ROTAT_CARTAO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCIDO_ROTAT_CARTAO,

			  LAG(VENCER_CARTAO_CRED,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CARTAO_CRED,
			  LAG(VENCER_CARTAO_CRED,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CARTAO_CRED,
			  LAG(VENCER_CARTAO_CRED,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CARTAO_CRED,

              LAG(VENCER_SEM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_SEM_DESC_FOLHA,
			  LAG(VENCER_SEM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_SEM_DESC_FOLHA,
			  LAG(VENCER_SEM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_SEM_DESC_FOLHA,

              LAG(VENCER_COM_DESC_FOLHA,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_COM_DESC_FOLHA,
			  LAG(VENCER_COM_DESC_FOLHA,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_COM_DESC_FOLHA,
			  LAG(VENCER_COM_DESC_FOLHA,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_COM_DESC_FOLHA,

			  LAG(VENCER_CHEQUE_ESP,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CHEQUE_ESP,
			  LAG(VENCER_CHEQUE_ESP,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CHEQUE_ESP,
			  LAG(VENCER_CHEQUE_ESP,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CHEQUE_ESP,

			  LAG(VENCER_CAPITAL_GIRO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_CAPITAL_GIRO,
			  LAG(VENCER_CAPITAL_GIRO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_CAPITAL_GIRO,
			  LAG(VENCER_CAPITAL_GIRO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_CAPITAL_GIRO,

              LAG(VENCER_TIT_DESCONT,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_TIT_DESCONT,
              LAG(VENCER_TIT_DESCONT,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_TIT_DESCONT,
              LAG(VENCER_TIT_DESCONT,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_TIT_DESCONT,

			  LAG(VENCER_ROTAT_CARTAO,1,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG1_VENCER_ROTAT_CARTAO,
			  LAG(VENCER_ROTAT_CARTAO,2,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG2_VENCER_ROTAT_CARTAO,
			  LAG(VENCER_ROTAT_CARTAO,3,0) OVER(PARTITION BY NR_CPF_CNPJ_RAIZ ORDER BY DT_MVM_DWM) AS LAG3_VENCER_ROTAT_CARTAO

        FROM
	(
        SELECT NR_CPF_CNPJ_RAIZ, 
               DT_MVM_DWM,
               MAX(TIPO) as TIPO,
               MAX(VENC_ACM_181)         AS VENC_ACM_181        ,
               MAX(VENC_151_180)         AS VENC_151_180        ,
               MAX(VENC_121_150)         AS VENC_121_150        , 
               MAX(VENC_091_120)         AS VENC_091_120        ,
               MAX(VENC_061_090)         AS VENC_061_090        , 
               MAX(VENC_031_060)         AS VENC_031_060        ,
               MAX(VENC_015_030)         AS VENC_015_030        ,
               MAX(VENCER_181_360)       AS VENCER_181_360      ,
               MAX(VENCER_091_180)       AS VENCER_091_180      ,
               MAX(VENCER_061_090)       AS VENCER_061_090      , 
               MAX(VENCER_031_060)       AS VENCER_031_060      , 
               MAX(VENCER_015_030)       AS VENCER_015_030      , 
               MAX(VENCIDOTOTAL)         AS VENCIDOTOTAL        ,
		       MAX(VENCERTOTAL)          AS VENCERTOTAL         , 
			   MAX(QTD_OPERACOES)        AS QTD_OPERACOES       ,
			   
			   MAX(VENCIDO_CARTAO_CRED)     AS VENCIDO_CARTAO_CRED    ,
			   MAX(VENCIDO_COM_DESC_FOLHA)  AS VENCIDO_COM_DESC_FOLHA ,
			   MAX(VENCIDO_SEM_DESC_FOLHA)  AS VENCIDO_SEM_DESC_FOLHA ,
			   MAX(VENCIDO_CHEQUE_ESP)      AS VENCIDO_CHEQUE_ESP     ,
			   MAX(VENCIDO_CAPITAL_GIRO)    AS VENCIDO_CAPITAL_GIRO   ,
			   MAX(VENCIDO_TIT_DESCONT)     AS VENCIDO_TIT_DESCONT    ,
               MAX(VENCIDO_ROTAT_CARTAO)    AS VENCIDO_ROTAT_CARTAO   ,

			   MAX(VENCER_CARTAO_CRED)     AS VENCER_CARTAO_CRED    ,
			   MAX(VENCER_COM_DESC_FOLHA)  AS VENCER_COM_DESC_FOLHA ,
			   MAX(VENCER_SEM_DESC_FOLHA)  AS VENCER_SEM_DESC_FOLHA ,
			   MAX(VENCER_CHEQUE_ESP)      AS VENCER_CHEQUE_ESP     ,
			   MAX(VENCER_CAPITAL_GIRO)    AS VENCER_CAPITAL_GIRO   ,
			   MAX(VENCER_TIT_DESCONT)     AS VENCER_TIT_DESCONT    ,
               MAX(VENCER_ROTAT_CARTAO)    AS VENCER_ROTAT_CARTAO   ,

			   MAX(VALORPREJUIZOTOTAL)   AS VALORPREJUIZOTOTAL  ,
			   MAX(VALORCREDITOLIBERAR)  AS VALORCREDITOLIBERAR ,
			   MAX(VALORRISCOTOTAL)      AS VALORRISCOTOTAL     ,
			   MAX(BAIXA_PREJ_ATE12)     AS BAIXA_PREJ_ATE12    ,
			   MAX(BAIXA_PREJ_ATE12_48)  AS BAIXA_PREJ_ATE12_48 ,
			   MAX(BAIXA_PREJ_ACM_48)    AS BAIXA_PREJ_ACM_48   ,
			   MAX(ENDIVIDAMENTO_CURTO)  AS ENDIVIDAMENTO_CURTO ,
			   MAX(ENDIVIDAMENTO_LONGO)  AS ENDIVIDAMENTO_LONGO ,
		  CASE WHEN MAX(VENCERTOTAL)>0 THEN 1 ELSE 0 END AS TOMADOR   
 
               FROM 
			 (  SELECT DISTINCT IDCONSULTA,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN NUMCCPFCNPJ
                            WHEN LENGTH(NUMCCPFCNPJ)=14 THEN SUBSTRING(NUMCCPFCNPJ,1,8)
                            ELSE NUMCCPFCNPJ END AS NR_CPF_CNPJ_RAIZ,
                       CASE WHEN LENGTH(NUMCCPFCNPJ)=14 
                            THEN MAX(IDCONSULTA) OVER(PARTITION BY SUBSTRING(NUMCCPFCNPJ,1,8), DATAMOVIMENTODWM) 
                            ELSE MAX(IDCONSULTA) OVER(PARTITION BY NUMCCPFCNPJ,DATAMOVIMENTODWM) END AS ID_MAX ,
					   CASE WHEN LENGTH(NUMCCPFCNPJ)=11 THEN 'PF' ELSE 'PJ' END AS TIPO ,
                       DATAMOVIMENTODWM AS DT_MVM_DWM,
                       VALORVENCIDO_1_14_DIA +
                       VALORVENCIDO_15_30_DIA    AS VENC_015_030 ,
                       VALORVENCIDO_31_60_DIA    AS VENC_031_060 ,
                       VALORVENCIDO_61_90_DIA    AS VENC_061_090 ,
                       VALORVENCIDO_91_120_DIA   AS VENC_091_120 ,
                       VALORVENCIDO_121_150_DIA  AS VENC_121_150 ,
                       VALORVENCIDO_151_180_DIA  AS VENC_151_180 ,
                       VALORVENCIDO_181_240_DIA  + 
                       VALORVENCIDO_241_300_DIA  +
                       VALORVENCIDO_301_360_DIA  + 
                       VALORVENCIDO_361_540_DIA  +
                       VALORVENCIDOACIMA_540_DIA AS VENC_ACM_181 ,
					   VALORVENCIDOTOTAL         AS VENCIDOTOTAL ,
					   VALORVENCERATE_30_DIA     AS VENCER_015_030 ,
                       VALORVENCER_31_60_DIA     AS VENCER_031_060 ,
                       VALORVENCER_61_90_DIA     AS VENCER_061_090 ,
                       VALORVENCER_91_180_DIA    AS VENCER_091_180 ,
                       VALORVENCER_181_360_DIA	 AS VENCER_181_360 ,
                       VALORVENCER_361_720_DIA   AS VENCER_361_720 ,
					   VALORVENCER_721_1080_DIA  + 
                       VALORVENCER_1081_1440_DIA +
					   VALORVENCER_1441_1800_DIA + 
                       VALORVENCER_1801_5400_DIA +
                       VALORVENCERACIMA_5400_DIA AS VENCER_ACM_721 ,
					   VALORVENCERTOTAL	AS VENCERTOTAL ,
					   QTDOPERACOESCREDITO AS QTD_OPERACOES,
					   VALORPREJUIZOTOTAL,
					   CODMODALIDADEOPERACAO,
					   CODSUBMODALIDADEOPERACAO,
					   VALORCREDITOLIBERAR,
                       VALORRISCOTOTAL,
					   VALORCREDITOBXAPREJUIZO12MM AS BAIXA_PREJ_ATE12,
                       VALORCREDITOBXAPREJUIZO12_48MM AS BAIXA_PREJ_ATE12_48,
                       VALORCREDITOBXAPJZACIMA_48MM AS BAIXA_PREJ_ACM_48,
					   VALORVENCIDO_1_14_DIA     +
                       VALORVENCIDO_15_30_DIA    +
                       VALORVENCIDO_31_60_DIA    + 
                       VALORVENCIDO_61_90_DIA    + 
                       VALORVENCIDO_91_120_DIA   + 
                       VALORVENCIDO_121_150_DIA  +
                       VALORVENCIDO_151_180_DIA  +
                       VALORVENCIDO_181_240_DIA  + 
                       VALORVENCIDO_241_300_DIA  +
                       VALORVENCIDO_301_360_DIA  AS ENDIVIDAMENTO_CURTO ,
                       VALORVENCIDO_361_540_DIA  +
                       VALORVENCIDOACIMA_540_DIA AS ENDIVIDAMENTO_LONGO ,

					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (10,18)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CARTAO_CRED ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=2
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_COM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=3
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_SEM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=13
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CHEQUE_ESP ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (15,16,17)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_CAPITAL_GIRO,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO IN (1,2,3,98,99)
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_TIT_DESCONT,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO=4
                            THEN VALORVENCERTOTAL ELSE 0 END AS VENCER_ROTAT_CARTAO ,

					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (10,18)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CARTAO_CRED ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=2
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_COM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=3
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_SEM_DESC_FOLHA ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO=13
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CHEQUE_ESP ,
					   CASE WHEN CODMODALIDADEOPERACAO=2 AND CODSUBMODALIDADEOPERACAO IN (15,16,17)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_CAPITAL_GIRO,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO IN (1,2,3,98,99)
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_TIT_DESCONT,
					   CASE WHEN CODMODALIDADEOPERACAO=3 AND CODSUBMODALIDADEOPERACAO=4
                            THEN VALORVENCIDOTOTAL ELSE 0 END AS VENCIDO_ROTAT_CARTAO

        FROM BACEN_CONSULTA_EVENTUAL
		WHERE DATAMOVIMENTODWM BETWEEN '2019-08-01' AND '2019-08-01'
              AND CODMODALIDADEOPERACAO NOT IN (14,15,16,19,50) ) AS MAE
        
		WHERE IDCONSULTA=ID_MAX 
		GROUP BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM 
        ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM ) AS MAE

		) AS A

LEFT JOIN SAFRA_BACEN  AS B ON A.NR_CPF_CNPJ_RAIZ=B.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM = B.DT_MVM_DWM
LEFT JOIN SAFRA_BACEN  AS C ON A.NR_CPF_CNPJ_RAIZ=C.NR_CPF_CNPJ_RAIZ AND A.DT_MVM_DWM = INTNX('month',C.DT_MVM_DWM,-1)
ORDER BY NR_CPF_CNPJ_RAIZ, DT_MVM_DWM  ;
DISCONNECT FROM CON1;
QUIT;





/*
DATA PLD.CADASTRO_POSITIVO2019;SET PLD.CADASTRO_POSITIVO2019;
RISCO_MAX = MAX(RISCO_BC, LAG1_RISCO_BC, LAG2_RISCO_BC, LAG3_RISCO_BC, LAG4_RISCO_BC,
                LAG5_RISCO_BC, LAG6_RISCO_BC, LAG7_RISCO_BC, LAG8_RISCO_BC,
                LAG9_RISCO_BC, LAG10_RISCO_BC, LAG11_RISCO_BC, LAG12_RISCO_BC);
DROP RISCO_BC1--RISCO_BC12;
RUN;
*/

PROC FREQ DATA=CADASTRO_POSITIVO2019 ;
TABLE CLASSE_CONSULTA* RISCO_MAX RISCO_MAX / OUT=SAIDA missing;
RUN;


PROC HP4SCORE DATA=PLD.CADASTRO_POSITIVO2019(WHERE=(TIPO='PF')) SEED=666;
/*CONTAGEM>=6 AND IND_NAO_TOMADOR=0*/
ID NR_CPF_CNPJ_RAIZ DT_MVM_DWM TIPO CLASSE_CONSULTA CONTAGEM RISCO_MAX;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PF_RESTR.bin"
OUT=SCORE2019PF(DROP=_WARN_);
RUN;

PROC HP4SCORE DATA=PLD.CADASTRO_POSITIVO2019(WHERE=(TIPO='PJ')) SEED=666;
/*CONTAGEM>=6 AND IND_NAO_TOMADOR=0*/
ID NR_CPF_CNPJ_RAIZ DT_MVM_DWM TIPO CLASSE_CONSULTA CONTAGEM RISCO_MAX ;
SCORE FILE="/media/bi_modelagem/_pld/Risco_de_Credito/POC Datarobot/CADPOS/CADPOS_PF_RESTR.bin"
OUT=SCORE2019PJ(DROP=_WARN_);
RUN;

DATA SCORE2019;
SET SCORE2019PF SCORE2019PJ;
RUN;


PROC FREQ DATA=SCORE2019;
TABLE DT_MVM_DWM;
RUN;


/*------------------------------------------------*/
/* AND YEAR(DT_MVM_DWM)=9 AND MONTH(DT_MVM_DWM)=1 */
/*------------------------------------------------*/

PROC SQL;
CREATE TABLE CATEGORIA AS
SELECT TIPO,RISCO_MAX,count(*) as total
FROM SCORE2019
WHERE  ((P_DEFAULT_ATRASO_RENEG1<=0.10 AND TIPO="PF" ) OR 
        (P_DEFAULT_ATRASO_RENEG1<=0.10 AND TIPO="PJ" ) OR
        (P_DEFAULT_ATRASO_RENEG1>=0.10 AND TIPO="PF" ) OR 
        (P_DEFAULT_ATRASO_RENEG1>=0.10 AND TIPO="PJ" ))
        AND CONTAGEM>=6 
GROUP BY TIPO,RISCO_MAX;
QUIT;


PROC SORT DATA=CATEGORIA;BY RISCO_MAX;RUN;
PROC TRANSPOSE DATA=CATEGORIA OUT=RELAT.CATEGORIA2019(DROP=_NAME_) PREFIX=CONT_;
BY RISCO_MAX;
ID TIPO;
VAR TOTAL;
RUN;



PROC SQL;
CREATE TABLE CATEGORIA AS
SELECT TIPO,
       CASE WHEN P_DEFAULT_ATRASO_RENEG1<=0.0022 THEN 'R1'
	        WHEN P_DEFAULT_ATRASO_RENEG1<=0.0048 THEN 'R2'
            WHEN P_DEFAULT_ATRASO_RENEG1<=0.0070 THEN 'R3'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.0103 THEN 'R4'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.0207 THEN 'R5'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.0322 THEN 'R6'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.0546 THEN 'R7'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.0700 THEN 'R8'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.1046 THEN 'R9'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.1300 THEN 'R10'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.1560 THEN 'R11'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.2000 THEN 'R12'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.2500 THEN 'R13'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.3000 THEN 'R14'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.4000 THEN 'R15'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.5000 THEN 'R16'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.6000 THEN 'R17'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.7000 THEN 'R18'
			WHEN P_DEFAULT_ATRASO_RENEG1<=0.8500 THEN 'R19'
			WHEN P_DEFAULT_ATRASO_RENEG1> 0.8500 THEN 'R20'

			ELSE '>R20' END AS RISCO_NOVO,
        COUNT(*) as TOTAL

FROM SCORE2019
WHERE  ((P_DEFAULT_ATRASO_RENEG1<=0.10 AND TIPO="PF" AND RISCO_MAX<=3) OR 
        (P_DEFAULT_ATRASO_RENEG1<=0.10 AND TIPO="PJ" AND RISCO_MAX<=3) OR
        (P_DEFAULT_ATRASO_RENEG1>=0.10 AND TIPO="PF" AND RISCO_MAX>=8) OR 
        (P_DEFAULT_ATRASO_RENEG1>=0.10 AND TIPO="PJ" AND RISCO_MAX>=8))
        AND CONTAGEM>=6  
GROUP BY RISCO_NOVO;
QUIT;
/*CONTAGEM>=6 AND IND_NAO_TOMADOR=0*/

PROC TRANSPOSE DATA=CATEGORIA OUT=CATEGORIA(DROP=_NAME_) PREFIX=TIPO_;
BY RISCO_NOVO;
ID TIPO;
VAR TOTAL;
RUN;


PROC SQL;
SELECT COUNT(*) FROM PLD.CADASTRO_POSITIVO;
SELECT COUNT(*) FROM PLD.CADASTRO_POSITIVO2019;
SELECT COUNT(*) FROM PLD.SAFRA_BACEN;
QUIT;